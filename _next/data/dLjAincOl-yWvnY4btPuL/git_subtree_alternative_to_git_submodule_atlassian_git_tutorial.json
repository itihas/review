{"pageProps":{"title":"Git Subtree: Alternative to Git Submodule | Atlassian Git Tutorial","hast":{"type":"root","children":[{"type":"element","tagName":"dl","properties":{},"children":[{"type":"element","tagName":"dt","properties":{},"children":[{"type":"text","value":"url"}]},{"type":"element","tagName":"dd","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.atlassian.com/git/tutorials/git-subtree"},"children":[{"type":"text","value":"https://www.atlassian.com/git/tutorials/git-subtree"}]}]}]},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"git subtree lets you nest one repository inside another as a sub-directory. It is one of several ways Git projects can manage project dependencies.\nA diagram showing the interaction between two repositories before and after using Git Subtree.\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Why you may want to consider git subtree\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"    Management of a simple workflow is easy.\n    Older version of Git are supported (even older than v1.5.2).\n    The sub-projectâ€™s code is available right after the clone of the super project is done.\n    git subtree does not require users of your repository to learn anything new. They can ignore the fact that you are using git subtree to manage dependencies.\n    git subtree does not add new metadata files like git submodule does (i.e., .gitmodule).\n    Contents of the module can be modified without having a separate repository copy of the dependency somewhere else.\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Drawbacks (but in our opinion they're largely acceptable):\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"    You must learn about a new merge strategy (i.e.git subtree).\n    Contributing code back upstream for the sub-projects is slightly more complicated.\n    The responsibility of not mixing super and sub-project code in commits lies with you.\n"}]}]}]},"filetags":{},"backlinks":[]},"__N_SSG":true}