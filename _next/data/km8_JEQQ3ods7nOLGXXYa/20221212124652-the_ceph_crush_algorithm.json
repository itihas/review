{"pageProps":{"title":"The Ceph CRUSH algorithm","hast":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Allocation algorithm. given an input value, CRUSH deterministically outputs an ordered list of distinct storage targets.\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Create a cluster map, which is a tree where the leaves are storage devices; call the internal nodes buckets.\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Buckets have associated weights and are of four different types:\n"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"uniform (children are identical; constant-time allocation)\n"}]}]},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"list (children are arbitrary weights; we step through it until the current node is heavier than the sum of the remaining)\n"}]}]},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"tree (children have arbitrary weights)\n"}]}]},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"straw (children are assigned numbers which are multiplied by weights, and the \"longest straw\" is chosen)\n"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This plus implementation of allocation rules, which act as filters.\n"}]}]},"filetags":{},"backlinks":[{"path":"/all_pages","title":"All Pages"}]},"__N_SSG":true}